// Code generated by MockGen. DO NOT EDIT.
// Source: replaceRule.go

// Package numberConverter is a generated GoMock package.
package numberConverter

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReplaceRule is a mock of ReplaceRule interface.
type MockReplaceRule struct {
	ctrl     *gomock.Controller
	recorder *MockReplaceRuleMockRecorder
}

// MockReplaceRuleMockRecorder is the mock recorder for MockReplaceRule.
type MockReplaceRuleMockRecorder struct {
	mock *MockReplaceRule
}

// NewMockReplaceRule creates a new mock instance.
func NewMockReplaceRule(ctrl *gomock.Controller) *MockReplaceRule {
	mock := &MockReplaceRule{ctrl: ctrl}
	mock.recorder = &MockReplaceRuleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReplaceRule) EXPECT() *MockReplaceRuleMockRecorder {
	return m.recorder
}

// Replace mocks base method.
func (m *MockReplaceRule) Replace(arg0 int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Replace", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Replace indicates an expected call of Replace.
func (mr *MockReplaceRuleMockRecorder) Replace(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Replace", reflect.TypeOf((*MockReplaceRule)(nil).Replace), arg0)
}
